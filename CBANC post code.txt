const insertdeal = (request, response) => {
const { id, oppotunityid, percentfunded, percentcommitted, retaining, status, resourcetype, loanstatus } = request.body
  pool.query( "INSERT INTO countries (id, oppotunityid, percentfunded, percentcommitted, retaining, status, resourcetype, loanstatus) VALUES ($1,$2,$3,$4,$5,$6,$7,$8)",[id, oppotunityid, percentfunded, percentcommitted, retaining, status, resourcetype, loanstatus], (error, results) => {
    if (error) {
      throw error
    }
    response.status(201).send('A new row is inserted in deal')
  })
}


const insertdeal_participant = (request, response) => {
const { id, userid, deal_id, percent, agreementid, resourcetype, fi_id, funded_amountinpennies, funded_date, funded_user_id, funded_name } = request.body
  pool.query( "INSERT INTO countries (id, userid, deal_id, percent, agreementid, resourcetype, fi_id, funded_amountinpennies, funded_date, funded_user_id, funded_name) VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11)",[id, userid, deal_id, percent, agreementid, resourcetype, fi_id, funded_amountinpennies, funded_date, funded_user_id, funded_name], (error, results) => {
    if (error) {
      throw error
    }
    response.status(201).send('A new row is inserted in deal_participant')
  })
}


const inserttransfer = (request, response) => {
const { id, amountinpennies, status, "feeInpennies", feepaidby, rollupid, moneywas, type, previousprincipalbalanceinpennies, deal_participant_id } = request.body
  pool.query( "INSERT INTO countries (id, amountinpennies, status, "feeInpennies", feepaidby, rollupid, moneywas, type, previousprincipalbalanceinpennies, deal_participant_id) VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,)",[id, amountinpennies, status, "feeInpennies", feepaidby, rollupid, moneywas, type, previousprincipalbalanceinpennies, deal_participant_i], (error, results) => {
    if (error) {
      throw error
    }
    response.status(201).send('A new row is inserted in transfer')
  })
}


const insertdeal = (request, response) => {
const { id, oppotunityid, percentfunded, percentcommitted, retaining, status, resourcetype, loanstatus } = request.body
  pool.query( "INSERT INTO countries (id, oppotunityid, percentfunded, percentcommitted, retaining, status, resourcetype, loanstatus) VALUES ($1,$2,$3,$4,$5,$6,$7,$8)",[id, oppotunityid, percentfunded, percentcommitted, retaining, status, resourcetype, loanstatus], (error, results) => {
    if (error) {
      throw error
    }
    response.status(201).send('A new row is inserted in deal')
  })
}


const insertdisbursement = (request, response) => {
const { id, type, amountinpennies, status, "feeInpennies", feepaidby, rollupid, moneywas, principalinpennies, disbursementdetails_interestinpennies, borrowerfeesinpennies, sellerfeesinpennies, memo, previousprincipalbalanceinpennies, deal_participant_id } = request.body
  pool.query( "INSERT INTO countries (id, type, amountinpennies, status, "feeInpennies", feepaidby, rollupid, moneywas, principalinpennies, disbursementdetails_interestinpennies, borrowerfeesinpennies, sellerfeesinpennies, memo, previousprincipalbalanceinpennies, deal_participant_id) VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15)",[id, type, amountinpennies, status, "feeInpennies", feepaidby, rollupid, moneywas, principalinpennies, disbursementdetails_interestinpennies, borrowerfeesinpennies, sellerfeesinpennies, memo, previousprincipalbalanceinpennies, deal_participant_id], (error, results) => {
    if (error) {
      throw error
    }
    response.status(201).send('A new row is inserted in disbursement')
  })
}





